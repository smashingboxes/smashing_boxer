- name: Install unicorn upstart script
  template: src=unicorn_upstart.j2
            dest=/etc/init/unicorn_{{ app_name}}.conf
  register: unicorn_upstart_installation
  tags: [configure_unicorn]

- name: register unicorn upstart script
  command: initctl reload-configuration
  when: unicorn_upstart_installation.changed
  tags: [configure_unicorn]

- name: Give deployer user access to unicorn upstart jobs
  lineinfile: 'dest=/etc/sudoers
               state=present
               line="{{deployer_user}} ALL = (root) NOPASSWD: /sbin/{{item}} unicorn_{{app_name}}"'
  with_items:
    - start
    - stop
    - restart
    - status
    - reload
  tags: [configure_unicorn]

- name: Set up unicorn log dir
  file: path={{app_path}}/log state=directory owner=deployer
  tags: [configure_unicorn]

- name: Install unicorn config
  template: src=unicorn.rb.j2
            dest={{app_path}}/config/unicorn.rb
  tags: [configure_unicorn]

- include: monit_unicorn_install.yml
  when: use_monit

- name: Set up db config
  template: src=database.yml.j2 dest={{app_path}}/config/database.yml
  
# zzet.rbenv puts all the rbenv stuff in profile for some reason
# so we gotta use login shells to do this stuff
- name: Install bundle gems
  remote_user: "{{deployer_user}}"
  command: chdir={{ app_path }}
           bash -lc "RAILS_ENV={{app_env}} bundle install
             --without test development contests_development --deployment"
  tags: [deploy, bundle]
  when: (app_checkout is defined and app_checkout.changed) or
        force_bundle

- name: Ensure env_config.yml file present
  stat: path={{ app_path }}/config/env_config.yml
  register: env_config_file
  tags: [deploy]

- name: Ask for env_config.yml
  debug: msg="You've got to upload env_config.yml to {{app_path}}/config to continue"
  when: env_config_file.stat.exists != true
  tags: [deploy]

- name: Wait one day for env_config.yml to get put on the server
  wait_for: path={{app_path}}/config/env_config.yml state=present timeout=86400
  when: env_config_file.stat.exists != true
  tags: [deploy]

- include: db_reset.yml
  when: force_db_reset is defined and force_db_reset
  tags: [db_reset]

- name: Migrate DB
  remote_user: deployer
  command: chdir={{ app_path }}
           bash -lc "bundle exec rake db:migrate RAILS_ENV={{app_env}}"
  run_once: true
  tags: [deploy, migrate, db_reset]
  when: (app_checkout is defined and app_checkout.changed)
        or rake.force_migrate 
        or (db_reset is defined and db_reset.changed)

- name: Seed DB
  remote_user: deployer
  command: chdir={{ app_path }}
           bash -lc "bundle exec rake db:seed RAILS_ENV={{app_env}}"
  run_once: true
  tags: [deploy, seed, db_reset]
  when: (app_checkout is defined and app_checkout.changed)
        or rake.force_seed
        or (db_reset is defined and db_reset.changed)

- name: Ensure tmp dir present for unicorn pids
  file: state=directory path={{app_path}}/tmp/unicorn owner=deployer
  tags: [deploy]

- include: upstart_unicorn.yml
  when: not use_monit

- include: monit_unicorn.yml
  when: use_monit
